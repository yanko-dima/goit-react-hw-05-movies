{"version":3,"file":"static/js/793.cd0f98fe.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/PageHeading/PageHeading.module.css?b132","components/PageHeading/PageHeading.jsx","pages/MovieDetails/MovieDetails.styled.js","components/MovieGenres/MovieGenres.jsx","servises/movieNavItems.js","webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","webpack://react-homework-template/./src/components/BackButton/BackButton.module.css?d3a5","components/BackButton/BackButton.jsx","pages/MovieDetails/MovieDetails.jsx","hooks/useMovieDetails.js","servises/films-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"PageHeading_title__1wPIF\"};","import css from './PageHeading.module.css';\n\nexport default function PageHeading({ text }) {\n  return <h1 className={css.title}>{text}</h1>;\n}\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const NavItem = styled(NavLink)`\n  font-weight: 400;\n\n  &.active {\n    color: red;\n  }\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    color: skyblue;\n  }\n\n  :not(:last-child) {\n    margin-bottom: 5px;\n  }\n`;\n","export default function MovieGenres({ genres }) {\n  return (\n    <>\n      <p>{genres && genres.map(genre => `${genre.name} `)}</p>\n    </>\n  );\n}\n","export const movieNavItems = [\n  { href: 'cast', text: 'Cast' },\n  { href: 'reviews', text: 'Reviews' },\n];\n","// extracted by mini-css-extract-plugin\nexport default {\"mainInfo\":\"MovieDetails_mainInfo__u8OZK\",\"movieImg\":\"MovieDetails_movieImg__5UJtY\",\"filmInfo\":\"MovieDetails_filmInfo__uxvgh\",\"goBackBtn\":\"MovieDetails_goBackBtn__WL+X0\",\"subInfo\":\"MovieDetails_subInfo__W8RBL\",\"nav\":\"MovieDetails_nav__oDuM2\",\"h4\":\"MovieDetails_h4__ur2fE\"};","// extracted by mini-css-extract-plugin\nexport default {\"backBtn\":\"BackButton_backBtn__g7sA7\",\"btnIcon\":\"BackButton_btnIcon__Xu+VR\"};","import { Link } from 'react-router-dom';\nimport css from './BackButton.module.css';\n\nexport default function BackButton({ location }) {\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  return (\n    <>\n      <button className={css.backBtn} type=\"button\">\n        <Link to={backLinkHref}>\n          <span className={css.btnIcon}>&#x261A;</span> Go back\n        </Link>\n      </button>\n    </>\n  );\n}\n","import { Outlet, useLocation } from 'react-router-dom';\nimport { NavItem } from './MovieDetails.styled';\nimport PageHeading from 'components/PageHeading';\nimport MovieGenres from 'components/MovieGenres';\nimport Loader from 'components/Loader';\nimport { useMovieDetails } from 'hooks/useMovieDetails';\nimport { movieNavItems } from 'servises/movieNavItems';\nimport css from './MovieDetails.module.css';\nimport BackButton from 'components/BackButton';\nimport { Suspense } from 'react';\n\nexport default function MovieDetails() {\n  const { filmYear, voteAverage, status, imsSrc, movie } = useMovieDetails();\n  const location = useLocation();\n\n  return (\n    <>\n      {status === 'loading' && <Loader />}\n      {status === 'resolved' && (\n        <>\n          <BackButton location={location} />\n          <div className={css.mainInfo}>\n            <img\n              className={css.movieImg}\n              src={imsSrc}\n              alt={movie.title}\n              width=\"230\"\n              height=\"345\"\n            />\n            <div className={css.filmInfo}>\n              <PageHeading text={`${movie.title} (${filmYear})`} />\n              <p>Use Score: {`${voteAverage}%`}</p>\n              <h2>Overview</h2>\n              <p>{movie.overview}</p>\n              <h3>Genres</h3>\n              <MovieGenres genres={movie.genres} />\n            </div>\n          </div>\n\n          <div className={css.subInfo}>\n            <h4 className={css.h4}>Addition information</h4>\n            <nav className={css.nav}>\n              {movieNavItems.map(({ href, text }) => (\n                <NavItem\n                  to={href}\n                  key={href}\n                  state={{ from: location.state.from }}\n                >\n                  {text}\n                </NavItem>\n              ))}\n            </nav>\n          </div>\n        </>\n      )}\n\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n}\n","import { getMovieDetails } from 'servises/films-api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nexport const useMovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const [filmYear, setFilmYear] = useState('');\n  const [voteAverage, setVoteAverage] = useState(0);\n  const [status, setStatus] = useState('idle');\n  const { slug } = useParams();\n  const IMG_BASE_URL = 'https://www.themoviedb.org/t/p/w600_and_h900_bestv2';\n  let imsSrc = `${IMG_BASE_URL}${movie.poster_path}`;\n  const NO_IMG =\n    'https://www.themoviedb.org/assets/2/v4/glyphicons/basic/glyphicons-basic-38-picture-grey-c2ebdbb057f2a7614185931650f8cee23fa137b93812ccb132b9df511df1cfac.svg';\n  const filmId = slug.match(/[a-z0-9/]+$/)[0];\n\n  if (!movie.poster_path) {\n    imsSrc = NO_IMG;\n  }\n\n  console.log(slug.match(/[a-z0-9/]+$/)[0]);\n\n  useEffect(() => {\n    setStatus('loading');\n    getMovieDetails(filmId).then(responseMovie => {\n      setMovie(responseMovie);\n      setFilmYear(responseMovie.release_date.slice(0, 4));\n      setVoteAverage(Math.round(responseMovie.vote_average * 10));\n      setStatus('resolved');\n    });\n  }, [filmId]);\n\n  return { filmYear, voteAverage, status, imsSrc, movie };\n};\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '31d9568154610e832478c1f68bfe46b9';\n\n// /trending/get-trending список самых популярных фильмов на сегодня\nexport function getTrendingFilms() {\n  return axios\n    .get(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`)\n    .then(response => response.data.results);\n}\n\n// /search/search-movies поиск кинофильма по ключевому слову\nexport function getSearshFilms(searchQuery) {\n  return axios\n    .get(`${BASE_URL}search/movie?api_key=${API_KEY}&query=${searchQuery}`)\n    .then(response => response.data.results);\n}\n\n// /movies/get-movie-details запрос полной информации о фильме\nexport function getMovieDetails(movieId) {\n  return axios\n    .get(`${BASE_URL}movie/${movieId}?api_key=${API_KEY}`)\n    .then(response => response.data);\n}\n\n// /movies/get-movie-credits запрос информации о актёрском составе\nexport function getMovieCredits(movieId) {\n  return axios\n    .get(`${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`)\n    .then(response => response.data.cast);\n}\n\n// /movies/get-movie-reviews запрос обзоров для страницы кинофильма\nexport function getMovieReviews(movieId) {\n  return axios\n    .get(`${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`)\n    .then(response => response.data.results);\n}\n"],"names":["PageHeading","text","className","css","NavItem","styled","NavLink","MovieGenres","genres","map","genre","name","movieNavItems","href","BackButton","backLinkHref","location","state","from","type","to","MovieDetails","useState","movie","setMovie","filmYear","setFilmYear","voteAverage","setVoteAverage","status","setStatus","slug","useParams","imsSrc","poster_path","filmId","match","console","log","useEffect","getMovieDetails","then","responseMovie","release_date","slice","Math","round","vote_average","useMovieDetails","useLocation","Loader","src","alt","title","width","height","overview","Suspense","fallback","BASE_URL","API_KEY","getTrendingFilms","axios","response","data","results","getSearshFilms","searchQuery","movieId","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}